<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>147的个人博客</title>
  
  
  <link href="https://147wind.github.io/atom.xml" rel="self"/>
  
  <link href="https://147wind.github.io/"/>
  <updated>2022-05-15T06:18:59.488Z</updated>
  <id>https://147wind.github.io/</id>
  
  <author>
    <name>147WIND</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS笔记1</title>
    <link href="https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B01/"/>
    <id>https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B01/</id>
    <published>2022-05-14T16:00:00.000Z</published>
    <updated>2022-05-15T06:18:59.488Z</updated>
    
    <content type="html"><![CDATA[<h4 id="知识点1："><a href="#知识点1：" class="headerlink" title="知识点1："></a>知识点1：</h4><p>1.一个网页可以有多个script标签，多个script标签是自上而下顺序执行的</p><p>2.一个script标签只能专注做一件事</p><p>3.每一行代码结束时都要加;号</p><h4 id="属性："><a href="#属性：" class="headerlink" title="属性："></a>属性：</h4><p>1.type=’text/javascript’ 声明当前标签内写的文本格式（可以省略）</p><p>2.src=’demo.js’ 可以引入外部.js文件,js文件中不用写script标签</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;demo.js&quot;</span>&gt;</span><br><span class="line">&lt;/scrpit&gt;</span><br></pre></td></tr></table></figure><h4 id="alert（）"><a href="#alert（）" class="headerlink" title="alert（）"></a>alert（）</h4><p>使用alert（）在当前页面弹出一个警告框</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;此为警告框&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="document-write"><a href="#document-write" class="headerlink" title="document.write()"></a>document.write()</h4><p>在当前页面中输出内容</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;h1&gt;在页面中输出此内容&lt;/h1&gt;&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意：如果在输出的文本内包括标签，则标签会和文本一起解析</p><h4 id="console-log"><a href="#console-log" class="headerlink" title="console.log()"></a>console.log()</h4><p>在控制台上输出内容</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;此文本在控制台中显示&#x27;</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;nbsp; #空格</span><br><span class="line">&amp;lt; #&lt;</span><br><span class="line">&amp;gt: #&gt;</span><br></pre></td></tr></table></figure><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>1.单行注释：//，快捷键 ctrl+/</p><p>2.多行注释：/<em> 内容 </em>/， 快捷键 ctrl + shift + /</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量需要声明了才能使用，声明变量需要<strong>关键字</strong></p><p>声明方法：var 关键字</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="string">&#x27;此文本在控制台中显示&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h4><p>输出常亮或变量的数据类型</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="keyword">typeof</span> <span class="number">100</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">//输出结果是n</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">JS课程的笔记</summary>
    
    
    
    <category term="学习笔记" scheme="https://147wind.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://147wind.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记3</title>
    <link href="https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B03/"/>
    <id>https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B03/</id>
    <published>2022-05-14T16:00:00.000Z</published>
    <updated>2022-05-15T12:19:49.120Z</updated>
    
    <content type="html"><![CDATA[<h4 id="有参数无返回值的函数"><a href="#有参数无返回值的函数" class="headerlink" title="有参数无返回值的函数"></a>有参数无返回值的函数</h4><p>声明方法:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> 函数名称：（形式参数）&#123;</span><br><span class="line">    函数体：</span><br><span class="line">    （具体要执行的代码）；</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 函数的调用</span></span><br><span class="line">函数名称（）；</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="attr">add</span>:(num1,num2)&#123;</span><br><span class="line">num3 = num1 + num2;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">add</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">//返回结果为3</span></span><br></pre></td></tr></table></figure><h4 id="有参数有返回值的函数"><a href="#有参数有返回值的函数" class="headerlink" title="有参数有返回值的函数"></a>有参数有返回值的函数</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> 函数名称：（形式参数）&#123;</span><br><span class="line">    函数体：</span><br><span class="line">    （具体要执行的代码）；</span><br><span class="line">    <span class="keyword">return</span> 表达式；</span><br><span class="line">    <span class="comment">//遇到return则函数将会中止</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果函数有返回值，则可以直接用函数本身赋值给变量</p><h4 id="argument"><a href="#argument" class="headerlink" title="argument"></a>argument</h4><p>用来存储实际传入的参数</p><p>属性：</p><p>​    argument.length：输入当前存储的参数的个数</p><p>访问存储的参数中的某个数据：</p><p>argument[下标] 注：下标从0开始</p><p>例：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">leijia</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; argument.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        sum +=argument[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">alert</span>(<span class="title function_">leijia</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 结果为6</span></span><br></pre></td></tr></table></figure><h4 id="用new创建数组"><a href="#用new创建数组" class="headerlink" title="用new创建数组"></a>用new创建数组</h4><p>可以通过new来创建数组</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> num = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">100</span>,<span class="literal">true</span>,<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="title function_">alert</span>(num)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>也可以直接使用 [ ] 创建</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> num = [<span class="number">100</span>,<span class="literal">true</span>,<span class="string">&quot;hello&quot;</span>]</span><br><span class="line"><span class="title function_">alert</span>(num)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>使用for来遍历数组</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> num = [<span class="number">100</span>,<span class="literal">true</span>,<span class="string">&quot;hello&quot;</span>]</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; num.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(arr[i])</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">//结果为页面显示100 true &quot;hello&quot;</span></span><br></pre></td></tr></table></figure><p>给一个长度为10的空数组随机的10个数字</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">// 声明长度为10的空数组</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="comment">// 用parseInt（）来将字符串转换为数字</span></span><br><span class="line">    arr[i] = <span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>使用for…in进行遍历</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(arr[i])</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="数组的方法"><a href="#数组的方法" class="headerlink" title="数组的方法"></a>数组的方法</h4><h5 id="push"><a href="#push" class="headerlink" title="push"></a>push</h5><p>格式：数组名.push（参数1，参数2，。。。）</p><p>可以给数组末尾添加参数</p><p>例：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line"><span class="title function_">alert</span>(arr);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 打印出 1，2,3,4,5,6</span></span><br></pre></td></tr></table></figure><h5 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h5><p>格式：数组名.pop()</p><p>将数组末尾的参数取下，拥有返回值，返回值等于取下的参数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arre = arr.<span class="title function_">pop</span>();</span><br><span class="line"><span class="title function_">alert</span>(arre);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回3</span></span><br></pre></td></tr></table></figure><h5 id="shift"><a href="#shift" class="headerlink" title="shift"></a>shift</h5><p>格式：数组名.shift()</p><p>将数组开头的参数取下，拥有返回值，返回值等于取下的参数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arrs = arr.<span class="title function_">shift</span>();</span><br><span class="line"><span class="title function_">alert</span>(arre);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回1</span></span><br></pre></td></tr></table></figure><h5 id="unshift"><a href="#unshift" class="headerlink" title="unshift"></a>unshift</h5><p>格式：数组名.unshift(参数1，参数2，。。。)</p><p>可以给数组开头添加参数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arrs = arr.<span class="title function_">unshift</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_">alert</span>(arrs);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回0,1,2,3</span></span><br></pre></td></tr></table></figure><h5 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h5><p>格式：数组名.concat(要添加的数组或参数1，数组或参数2，。。。)</p><p>拷贝原数组，生成新数组</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="keyword">var</span> arrs = arr1.<span class="title function_">concat</span>(arr2,<span class="number">7</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arrs)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回值为1,2,3,4,5,6,7</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">JS课程的笔记</summary>
    
    
    
    <category term="学习笔记" scheme="https://147wind.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://147wind.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记2</title>
    <link href="https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B02/"/>
    <id>https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B02/</id>
    <published>2022-05-14T16:00:00.000Z</published>
    <updated>2022-05-15T06:44:11.847Z</updated>
    
    <content type="html"><![CDATA[<h4 id="if"><a href="#if" class="headerlink" title="if"></a>if</h4><p>当条件成立时执行语句</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span>(num = <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num的值为10&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num的值不为10&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果条件要同时成立则添加 &amp;&amp; </p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span>(num &gt; <span class="number">9</span> &amp;&amp; num &lt; <span class="number">11</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num的值在11至9之间&quot;</span>)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;num的值不在11至9之间&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><p>设定多个常量，满足其中一个常量时执行该常量下的语句</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> grade = <span class="string">&quot;A&quot;</span></span><br><span class="line"><span class="keyword">switch</span>(grade)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>:</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;grade=A&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 注意要用break跳出循环</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;B&quot;</span>:</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;grade=B&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="comment">// 当常量均不满足时执行default语句，该语句不能省略</span></span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&quot;grade=C&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><p>表达式1 ？表达式2：表达式3；</p><p>先判断表达式1是否为真，若真，执行表达式2，假则执行表达式3</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">8</span>;</span><br><span class="line">num % <span class="number">2</span>==<span class="number">0</span> ? <span class="title function_">alert</span>(<span class="string">&#x27;num是偶数&#x27;</span>):<span class="title function_">alert</span>(<span class="string">&#x27;num是奇数&#x27;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>三种循环方式：while、do···while、for</p><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p>当条件成立时执行循环</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">        sum+=i; <span class="comment">//sum = sum + i</span></span><br><span class="line">        i++;    <span class="comment">// i = i + 1</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="do-···-while"><a href="#do-···-while" class="headerlink" title="do ··· while"></a>do ··· while</h4><p>while的另一种写法</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><p>在指定的次数中执行循环</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 计算1-1/2+1/3-1/4+...-1/100</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">100</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            sum-=<span class="number">1</span>/i;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            sum+=<span class="number">1</span>/i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 0.68817217931019</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">JS课程的笔记</summary>
    
    
    
    <category term="学习笔记" scheme="https://147wind.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://147wind.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记4</title>
    <link href="https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B04/"/>
    <id>https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B04/</id>
    <published>2022-05-14T16:00:00.000Z</published>
    <updated>2022-05-15T15:39:23.756Z</updated>
    
    <content type="html"><![CDATA[<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>可以通过new和双引号来创建字符串</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h3><h4 id="length"><a href="#length" class="headerlink" title="length"></a>length</h4><p>格式：字符串.length</p><p>查询字符串的长度</p><h4 id="CharAt"><a href="#CharAt" class="headerlink" title="CharAt"></a>CharAt</h4><p>格式：字符串.CharAt（索引值）</p><p>查询索引值所在的字符</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title class_">CharAt</span>(<span class="number">2</span>))</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回l</span></span><br></pre></td></tr></table></figure><h4 id="chartCodeAt"><a href="#chartCodeAt" class="headerlink" title="chartCodeAt"></a>chartCodeAt</h4><p>格式：字符串.chartCodeAt（索引值）</p><p>查询索引值所在字符的ASCII码值</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">chartCodeAt</span>(<span class="number">2</span>))</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="indexof"><a href="#indexof" class="headerlink" title="indexof"></a>indexof</h4><p>格式：指定字符串.indexof（要查找的字符串，起始寻找的位置）</p><p>查询要查找的字符串在指定字符串中的位置</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hellohellohellohellohello&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> strf = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&#x27;hello&#x27;</span>,<span class="number">2</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(strf)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回值为5</span></span><br></pre></td></tr></table></figure><h4 id="substring"><a href="#substring" class="headerlink" title="substring"></a>substring</h4><p>格式：字符串.substring(开始，结束)；</p><p>将开始位置和结束位置的部分字符复制出来</p><p>返回值是提取出来的部分字符</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hellohellohellohellohello&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回el</span></span><br></pre></td></tr></table></figure><h4 id="substr"><a href="#substr" class="headerlink" title="substr"></a>substr</h4><p>和substring类似，但是会复制到最后的索引值</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hellohellohellohellohello&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substr</span>(<span class="number">1</span>,<span class="number">3</span>))</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回ell</span></span><br></pre></td></tr></table></figure><h4 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h4><p>和substring类似，但是是取出而不是复制</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hellohellohellohellohello&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">slice</span>(<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回el</span></span><br></pre></td></tr></table></figure><h4 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h4><p>格式：字符串.replace(oldstr,newstr)</p><p>将字符串中的oldstr用newstr替换</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">replace</span>(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;replace&quot;</span>));</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回值为“hello replace”</span></span><br></pre></td></tr></table></figure><p>如果在oldstr后加/g则代表全部和oldstr相等的字符串</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world world world&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">replace</span>(world/g,<span class="string">&quot;replace&quot;</span>));</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">//返回值为“hello replace replace replace”</span></span><br></pre></td></tr></table></figure><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><p>格式：字符串.split(分隔符，返回的数组元素格式（默认为length，一般不用）);</p><p>用分隔符对原字符串进行分隔，将分隔后的字符串放在数组中返回</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> newstr = str.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newstr)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="comment">// 返回值为“hello,world”</span></span><br></pre></td></tr></table></figure><h4 id="toLowerCase"><a href="#toLowerCase" class="headerlink" title="toLowerCase:"></a>toLowerCase:</h4><p>转成全小写</p><h4 id="toUpperCase"><a href="#toUpperCase" class="headerlink" title="toUpperCase"></a>toUpperCase</h4><p>转成全大写</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> lstr = str.<span class="title function_">toLowerCase</span>();</span><br><span class="line"><span class="keyword">var</span> ustr = str.<span class="title function_">toUpperCase</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lstr,ustr)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">JS课程的笔记</summary>
    
    
    
    <category term="学习笔记" scheme="https://147wind.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://147wind.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JS笔记5</title>
    <link href="https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B05/"/>
    <id>https://147wind.github.io/2022/05/15/JS%E7%AC%94%E8%AE%B05/</id>
    <published>2022-05-14T16:00:00.000Z</published>
    <updated>2022-05-15T15:12:39.994Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字符串表单验证"><a href="#字符串表单验证" class="headerlink" title="字符串表单验证"></a>字符串表单验证</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;fun()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;userspan&quot;</span>&gt;</span>用户名是6-18个字符，可使用字母、数字、下划线、需以字母开头<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入密码&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#div1</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">400px</span>;<span class="attribute">height</span>: <span class="number">200px</span>;<span class="attribute">background-color</span>: lightblue;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;<span class="attribute">text-align</span>: center;<span class="attribute">display</span>: flex;<span class="attribute">flex-direction</span>: column;<span class="attribute">justify-content</span>: center;<span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#div1</span> <span class="selector-tag">input</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">180px</span>;<span class="attribute">height</span>: <span class="number">30px</span>;<span class="attribute">margin-top</span>:<span class="number">20px</span> </span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#div1</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>: <span class="number">10px</span>;<span class="attribute">color</span>: red;<span class="attribute">margin-top</span>:<span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> username = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;username&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> userspan = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userspan&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> ovalue = username.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span>(ovalue.<span class="property">length</span>&lt;<span class="number">6</span> || ovalue.<span class="property">length</span>&gt;<span class="number">18</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">userspan.<span class="property">innerHTML</span> =<span class="string">&quot;!长度应该是6-18个字符&quot;</span></span></span><br><span class="line"><span class="language-javascript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!(ovalue[<span class="number">0</span>]&gt;=<span class="string">&quot;a&quot;</span> &amp;&amp; ovalue[<span class="number">0</span>]&lt;=<span class="string">&quot;z&quot;</span> || ovalue[<span class="number">0</span>]&gt;=<span class="string">&quot;A&quot;</span> &amp;&amp; ovalue[<span class="number">0</span>]&lt;=<span class="string">&quot;Z&quot;</span>))&#123;</span></span><br><span class="line"><span class="language-javascript">userspan.<span class="property">innerHTML</span> = <span class="string">&quot;!首字符不是字母&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">userspan.<span class="property">innerHTML</span> = <span class="string">&quot;符合用户名的要求&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> year = d.<span class="title function_">getFullYear</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> month = d.<span class="title function_">getMonth</span>()+<span class="number">1</span>;<span class="comment">// 0-11</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> date = d.<span class="title function_">getDate</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> week = d.<span class="title function_">getDay</span>();<span class="comment">//0-6 星期天获取的值为0</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> hour = d.<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> minute = d.<span class="title function_">getMinutes</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> second = d.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//alert(week)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;今天是&quot;</span>+year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>+<span class="string">&quot; 星期&quot;</span>+<span class="title function_">changeweek</span>(week)+<span class="string">&quot; &quot;</span>+hour+<span class="string">&quot;:&quot;</span>+minute+<span class="string">&quot;:&quot;</span>+second)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeweek</span>(<span class="params">week</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> weekarr = [<span class="string">&quot;日&quot;</span>,<span class="string">&quot;一&quot;</span>,<span class="string">&quot;二&quot;</span>,<span class="string">&quot;三&quot;</span>,<span class="string">&quot;四&quot;</span>,<span class="string">&quot;五&quot;</span>,<span class="string">&quot;六&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> weekarr[week]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 年  月  日  星期几  时   分  秒</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;timers&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#timers</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">400px</span>;<span class="attribute">height</span>: <span class="number">50px</span>;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;<span class="attribute">color</span>:red;<span class="attribute">font-size</span>: <span class="number">25px</span>;<span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">showtime</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> year = d.<span class="title function_">getFullYear</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> month = d.<span class="title function_">getMonth</span>()+<span class="number">1</span>;<span class="comment">// 0-11</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> date = d.<span class="title function_">getDate</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> week = d.<span class="title function_">getDay</span>();<span class="comment">//0-6 星期天获取的值为0</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> hour = d.<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> minute = d.<span class="title function_">getMinutes</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> second = d.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> timerstr =<span class="string">&quot; &quot;</span>+year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>+<span class="string">&quot; 星期&quot;</span>+<span class="title function_">changeweek</span>(week)+<span class="string">&quot; &quot;</span>+hour+<span class="string">&quot;:&quot;</span>+minute+<span class="string">&quot;:&quot;</span>+second;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> timerstr</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changeweek</span>(<span class="params">week</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> weekarr = [<span class="string">&quot;日&quot;</span>,<span class="string">&quot;一&quot;</span>,<span class="string">&quot;二&quot;</span>,<span class="string">&quot;三&quot;</span>,<span class="string">&quot;四&quot;</span>,<span class="string">&quot;五&quot;</span>,<span class="string">&quot;六&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> weekarr[week]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 每隔1000毫秒执行一次传入的函数</span></span></span><br><span class="line"><span class="language-javascript"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> timers = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;timers&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">timers.<span class="property">innerHTML</span> = <span class="title function_">showtime</span>()</span></span><br><span class="line"><span class="language-javascript">&#125;,<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="取消定时器"><a href="#取消定时器" class="headerlink" title="取消定时器"></a>取消定时器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">show</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (i == <span class="number">5</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">cleanInterval</span>(timer)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">write</span>(i++ + <span class="string">&quot;&lt;/br&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(show,<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="秒表实现"><a href="#秒表实现" class="headerlink" title="秒表实现"></a>秒表实现</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;odv&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;hours&quot;</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;minutes&quot;</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;seconds&quot;</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;start()&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;pause()&quot;</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;reset()&quot;</span>&gt;</span>复位<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">250px</span>;<span class="attribute">height</span>: <span class="number">180px</span>;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;<span class="attribute">text-align</span>: center;<span class="attribute">display</span>: flex;<span class="attribute">align-items</span>: center; </span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: red;<span class="attribute">font-size</span>: <span class="number">30px</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> seconds = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> sec = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;seconds&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> min = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;minutes&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> hou = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;hours&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 把单位数字转换为双位，0为开头</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">dublnum</span>(<span class="params">num</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span>(num&lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> <span class="string">&quot;0&quot;</span>+num</span></span><br><span class="line"><span class="language-javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> num</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">start</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">seconds++;</span></span><br><span class="line"><span class="language-javascript">sec.<span class="property">innerHTML</span> = <span class="title function_">dublnum</span>(<span class="built_in">parseInt</span>(seconds%<span class="number">60</span>));</span></span><br><span class="line"><span class="language-javascript">min.<span class="property">innerHTML</span> = <span class="title function_">dublnum</span>(<span class="built_in">parseInt</span>(seconds/<span class="number">60</span>)%<span class="number">60</span>);</span></span><br><span class="line"><span class="language-javascript">hours.<span class="property">innerHTML</span> = <span class="title function_">dublnum</span>(<span class="built_in">parseInt</span>(seconds/<span class="number">3600</span>));</span></span><br><span class="line"><span class="language-javascript">&#125;,<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">pause</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="built_in">clearInterval</span>(timer)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">reset</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="built_in">clearInterval</span>(timer)</span></span><br><span class="line"><span class="language-javascript">seconds = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">sec.<span class="property">innerHTML</span> = <span class="string">&quot;00&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">min.<span class="property">innerHTML</span> = <span class="string">&quot;00&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">hours.<span class="property">innerHTML</span> = <span class="string">&quot;00&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">JS课程的笔记</summary>
    
    
    
    <category term="学习笔记" scheme="https://147wind.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="https://147wind.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>API笔记1-面部识别</title>
    <link href="https://147wind.github.io/2022/05/13/API%E7%AC%94%E8%AE%B01/"/>
    <id>https://147wind.github.io/2022/05/13/API%E7%AC%94%E8%AE%B01/</id>
    <published>2022-05-12T16:00:00.000Z</published>
    <updated>2022-05-13T13:16:12.467Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入request</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提前放入申请到的key和secret</span></span><br><span class="line">API_Key = <span class="string">&quot;[你的key]&quot;</span></span><br><span class="line">API_Secret = <span class="string">&quot;[你的密钥]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 放入API的URL</span></span><br><span class="line">base_url = <span class="string">&quot;https://api-cn.faceplusplus.com/facepp/v3/detect&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 填写payload，详情见开发文档</span></span><br><span class="line">payload = &#123;</span><br><span class="line">    <span class="string">&quot;api_key&quot;</span>:API_Key,</span><br><span class="line">    <span class="string">&quot;api_secret&quot;</span>:API_Secret,  </span><br><span class="line">    <span class="string">&quot;image_url&quot;</span>:<span class="string">&quot;https://img2.baidu.com/it/u=1724334041,2478716263&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=PNG?w=651&amp;h=500&quot;</span>,</span><br><span class="line">    <span class="string">&quot;return_attributes&quot;</span>:<span class="string">&quot;gender,age,smiling&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问，将结果保存在r变量中</span></span><br><span class="line"></span><br><span class="line">r = requests.post(base_url,payload)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以json文件格式返回r</span></span><br><span class="line">r.json()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">API课程的笔记</summary>
    
    
    
    <category term="学习笔记" scheme="https://147wind.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="API" scheme="https://147wind.github.io/tags/API/"/>
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到我的个人博客</title>
    <link href="https://147wind.github.io/2022/05/05/hello/"/>
    <id>https://147wind.github.io/2022/05/05/hello/</id>
    <published>2022-05-04T16:00:00.000Z</published>
    <updated>2022-05-04T17:06:36.747Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第二个个人博客，第一个博客暂停使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是我的第二个个人博客，第一个博客暂停使用&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>欢迎来到147的博客</title>
    <link href="https://147wind.github.io/2022/05/04/hello-world/"/>
    <id>https://147wind.github.io/2022/05/04/hello-world/</id>
    <published>2022-05-04T15:50:22.713Z</published>
    <updated>2022-05-11T12:11:02.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python笔记7-类与对象</title>
    <link href="https://147wind.github.io/2021/03/15/python%E7%AC%94%E8%AE%B07-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"/>
    <id>https://147wind.github.io/2021/03/15/python%E7%AC%94%E8%AE%B07-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-03-14T16:00:00.000Z</published>
    <updated>2022-05-11T12:10:28.529Z</updated>
    
    <content type="html"><![CDATA[<p>类是对象的抽象化，而对象是类的一个实例</p><p>对象是实实在在的一个东西，是类的实例化，具象化</p><p>定义类的方法：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class 类名：</span><br><span class="line">    属性1   #类属性</span><br><span class="line">    属性2</span><br><span class="line">    属性3</span><br><span class="line">    </span><br><span class="line">    。。。</span><br><span class="line">    </span><br><span class="line">    def 方法名（self）：  #实例方法</span><br><span class="line">        函数              #实例属性</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><br>实例方法：在类的内部，使用def关键字来定义。第一个参数默认是self【名字表示可以是其他的名字，但是这个位置必须被占用】<br>实例方法是归于类的实例所有</p><p>属性：在类的内部定义的变量【类属性】<br>定义在<strong>类里面，方法外面</strong>的属性称之为<u>类属性</u>，定义在<strong>方法内部</strong>的属性称之为<u>实例属性</u></p><p>创建对象的方法：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对象名=类名()</span><br></pre></td></tr></table></figure><br>对象使用方法的方法：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对象名.方法名（）</span><br></pre></td></tr></table></figure></p><h3 id="init方法"><a href="#init方法" class="headerlink" title="init方法"></a><strong>init</strong>方法</h3><p>该方法在类实例化时会自动调用，例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">people</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.name = <span class="number">147</span></span><br><span class="line">        self.age = <span class="number">18</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s 说: 我 %d 岁。&quot;</span> %(self.name,self.age))</span><br><span class="line">p = people()</span><br><span class="line">p.speak()</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>运行结果为打印出”147说：我18岁“</p><h3 id="new方法"><a href="#new方法" class="headerlink" title="new方法"></a><strong>new</strong>方法</h3><p>创建并返回一个实例对象，调用一次就会得到一个对象</p><p>是类的实例化方法，且必须要返回该实例，否则对象创建不成功，至少有一个参数是cls代表要实例化的类，此参数在实例化时由Python解释器自动提供，new方法执行要早于init，暂时认为是用来代替第一种创建对象方法（对象名=类）</p><p>使用方法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__</span> new __ （cls.*args, **kwargs）:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">object</span>.__ new __(cls)</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记6-列表</title>
    <link href="https://147wind.github.io/2021/02/09/python%E7%AC%94%E8%AE%B06-%E5%88%97%E8%A1%A8/"/>
    <id>https://147wind.github.io/2021/02/09/python%E7%AC%94%E8%AE%B06-%E5%88%97%E8%A1%A8/</id>
    <published>2021-02-08T16:00:00.000Z</published>
    <updated>2022-05-11T12:06:44.925Z</updated>
    
    <content type="html"><![CDATA[<p><strong>list</strong>（列表）是一种有序的集合，可以<strong>随时添加和删除</strong>其中的元素</p><p>特点：1.支持<strong>增删改查</strong><br>        2.列表中的数据可改变【数据项可以变化，但内存地址不会改变】<br>        3.用<strong>中括号</strong>[]来表示列表类型，数据项之间用逗号来分割，<em>注意：数据项可以是任何类型的数据</em><br>        4.支持<strong>索引和切片</strong>来进行操作</p><p>列表可以进行乘法运算，例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list[1,2,3]</span><br><span class="line">print(list*2)</span><br></pre></td></tr></table></figure><p>运行结果为[1,2,3,1,2,3]<br>注释：字符串中的[索引]也适用于列表，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list=[1,2,3]</span><br><span class="line">print(list[0])</span><br></pre></td></tr></table></figure><br>运行结果为打印出1</p><h3 id="1-len"><a href="#1-len" class="headerlink" title="1.len()"></a>1.len()</h3><p>用来检测列表的长度，例:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">li=[1,2,3]</span><br><span class="line">print(len(li))</span><br></pre></td></tr></table></figure><br>运行结果为打印出3</p><h3 id="2-append"><a href="#2-append" class="headerlink" title="2.append()"></a>2.append()</h3><p>为列表后面增加新的数据项<br>使用方法：列表名.append(新增数据项)<br><em>注释：使用append一次只能增加一个数据项，增加的数据项可以是任何类型(列表、字符串等等)</em></p><h3 id="3-insert"><a href="#3-insert" class="headerlink" title="3.insert()"></a>3.insert()</h3><p>在列表中的指定位置插入数据项<br>用法：列表名.insert(指定位置(0~n),要插入的数据项)</p><h3 id="4-extend"><a href="#4-extend" class="headerlink" title="4.extend()"></a>4.extend()</h3><p>作用与append()类似，但可以批量添加</p><h3 id="5-通过-索引-修改列表内容"><a href="#5-通过-索引-修改列表内容" class="headerlink" title="5.通过[索引]修改列表内容"></a>5.通过[索引]修改列表内容</h3><p>例:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list=[1,2,3]</span><br><span class="line">list[0]=4</span><br><span class="line">print(list)</span><br></pre></td></tr></table></figure><br>运行结果为打印出列表[4,1,2,3]</p><h3 id="6-del"><a href="#6-del" class="headerlink" title="6.del"></a>6.del</h3><p>用来<strong>永久删除</strong>列表中的元素，也可以删除指定的变量，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list=[1,2,3]</span><br><span class="line">del list[0]</span><br><span class="line">print(list)</span><br></pre></td></tr></table></figure><br>运行结果为打印出列表[2,3]<br>也可用来<strong>批量永久删除</strong>，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list=[1,2,3]</span><br><span class="line">del list[0:2]</span><br><span class="line">print(list)</span><br></pre></td></tr></table></figure><br>运行结果为打印出[3]</p><h3 id="7-remove"><a href="#7-remove" class="headerlink" title="7.remove()"></a>7.remove()</h3><p>可移除指定的数据项，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list=[1,2,3]</span><br><span class="line">list.remove(2)</span><br><span class="line">print(list)</span><br></pre></td></tr></table></figure><br>运行结果为打印出列表[1,3]</p><h3 id="8-pop"><a href="#8-pop" class="headerlink" title="8.pop()"></a>8.pop()</h3><p>指定<strong>取出</strong>列表中的某一项，而不是删除（不想删除该元素时可使用），如果留空则默认取出最后一个数据项，取出的数据可以用在其他地方，用法于remove相同</p><h3 id="9-index"><a href="#9-index" class="headerlink" title="9.index()"></a>9.index()</h3><p>用来获取指定数据项的索引号<br>用法为：列表名.index(数据项，开始的索引号(默认为0)，获取范围)<br>例:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list=[1,2,3]</span><br><span class="line">print(list.index(1))</span><br></pre></td></tr></table></figure><br>运行结果为打印出0</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>remove是根据<strong>元素</strong>来删除的<br>del是根据<strong>索引</strong>来删除的<br>del可以删除指定范围内的数据项<br>del还可以删除整个列表（以及对象）<br>pop会弹出列表中的元素，弹出的元素可使用在其他地方</p>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记5-函数返回值</title>
    <link href="https://147wind.github.io/2021/02/03/python%E7%AC%94%E8%AE%B05-%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC/"/>
    <id>https://147wind.github.io/2021/02/03/python%E7%AC%94%E8%AE%B05-%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC/</id>
    <published>2021-02-02T16:00:00.000Z</published>
    <updated>2022-05-11T12:05:46.481Z</updated>
    
    <content type="html"><![CDATA[<p>函数执行完后会返回一个对象，如果在函数的内部有return 就可以返回实际的值，否则返回none<br>可以返回任意类型，返回值类型应该取决于return后面的类型<br>在一个函数体内可出现多个return值，但肯定只能返回一个return值<br>如果在一个函数体内执行了return，意味着函数就退出了，return后面的代码语句将不会执行，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def sum(a,b):</span><br><span class="line">    sum=a+b</span><br><span class="line">    return sum #将计算的结果返回</span><br><span class="line">    pass</span><br><span class="line">print（sum(1,2)）</span><br></pre></td></tr></table></figure><br>运行结果为打印出3</p>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记4-函数</title>
    <link href="https://147wind.github.io/2021/02/02/python%E7%AC%94%E8%AE%B04-%E5%87%BD%E6%95%B0/"/>
    <id>https://147wind.github.io/2021/02/02/python%E7%AC%94%E8%AE%B04-%E5%87%BD%E6%95%B0/</id>
    <published>2021-02-01T16:00:00.000Z</published>
    <updated>2022-05-11T12:04:10.004Z</updated>
    
    <content type="html"><![CDATA[<p>在编写程序的过程中，有某一功能的代码块出现多次，为了提高编写的效率以及代码的重复使用，所以把具有独立功能的代码块组织为一个小模块，这就是函数</p><h3 id="1-创建（定义）一个函数"><a href="#1-创建（定义）一个函数" class="headerlink" title="1.创建（定义）一个函数"></a>1.创建（定义）一个函数</h3><p>方法:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def 函数名():</span><br><span class="line">    代码块</span><br><span class="line">    pass</span><br></pre></td></tr></table></figure><br>例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def inf():</span><br><span class="line">    print(&#x27;147&#x27;)</span><br><span class="line">    pass</span><br><span class="line">inf()</span><br></pre></td></tr></table></figure><br>运行结果为打印出147</p><h3 id="2-函数的参数"><a href="#2-函数的参数" class="headerlink" title="2.函数的参数"></a>2.函数的参数</h3><p>参数:其实就是函数为了实现某项特定的功能，进而为了得到实现功能所需要的数据，得到外部数据<br>例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def sum(a,b)  #形式参数：只是意义上的一种参数，在定义的时候是不占内存地址的</span><br><span class="line">    sum=a+b</span><br><span class="line">    print(sum)</span><br><span class="line">    pass</span><br><span class="line">sum(20,15)  #实际参数：是实际占用内存地址的</span><br></pre></td></tr></table></figure><br>运行结果为打印出35</p><p>还可以为函数添加<strong>默认参数</strong>，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def sum(a=20,b=30) #默认参数，在调用函数时若不输入参数则会使用默认参数</span><br><span class="line">    print(&#x27;默认参数相加为%d&#x27;%(a+b))</span><br><span class="line">sum()</span><br><span class="line">sum(10)</span><br></pre></td></tr></table></figure><br>运行结果为打印出默认参数相加为50和默认参数相加为40</p><h3 id="3-可变参数"><a href="#3-可变参数" class="headerlink" title="3.可变参数"></a>3.可变参数</h3><p>当<strong>参数个数不确定</strong>时使用args，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def sum(*args):</span><br><span class="line">    for i in args:</span><br><span class="line">        result+=i</span><br><span class="line">    print(&#x27;result=%d&#x27;%(result))</span><br><span class="line">sum(1,2,3)</span><br></pre></td></tr></table></figure><br>运行结果为打印出“resul=6”</p>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记3-字典</title>
    <link href="https://147wind.github.io/2021/02/01/python%E7%AC%94%E8%AE%B03-%E5%AD%97%E5%85%B8/"/>
    <id>https://147wind.github.io/2021/02/01/python%E7%AC%94%E8%AE%B03-%E5%AD%97%E5%85%B8/</id>
    <published>2021-01-31T16:00:00.000Z</published>
    <updated>2022-05-11T11:59:34.135Z</updated>
    
    <content type="html"><![CDATA[<p><strong>字典</strong>可以存储任意对象。字典是以<strong>键值对</strong>的形式创建的<u>{‘key’:’value’}</u>利用<strong>大括号</strong>包裹，和list一样，支持对数据的添加、修改、删除</p><h3 id="访问值的安全方式：get方法"><a href="#访问值的安全方式：get方法" class="headerlink" title="访问值的安全方式：get方法"></a>访问值的安全方式：get方法</h3><p>在不确定字典是否存在某一个值而又想获取其值时，可以使用get方法，还可以设置默认值</p><p><em>注意：1.字典的键（key）不能重复，值（value）可以重复<br>        2.字典的键（key）只能是不可变类型，如数字、字符串、元组</em></p><p> 特点：1.不是序列类型，没有下标的概念，是一个无序的键值集合，是内置的高级数据类型<br>         2.用{}来表示字典对象，每个键值对用逗号分隔<br>         3.键必须是不可变的类型【元组、字符串】,值<br>         可以是任意类型<br>         4.每个键必定是唯一的，如果存在重复的键，后者会覆盖前者</p><h3 id="1-添加、修改键值对"><a href="#1-添加、修改键值对" class="headerlink" title="1.[]添加、修改键值对"></a>1.[]添加、修改键值对</h3><p>例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict=&#123;&#125; #空字典</span><br><span class="line">dict[&#x27;name&#x27;]=&#x27;147&#x27;</span><br><span class="line">print(dict)</span><br></pre></td></tr></table></figure><br>运行结果为打印出{‘name’:’147’}</p><h3 id="2-len"><a href="#2-len" class="headerlink" title="2.len()"></a>2.len()</h3><p>用来计算字典中一共有几个键值对，用法与列表中的相同</p><h3 id="3-如何通过键获取对应的值"><a href="#3-如何通过键获取对应的值" class="headerlink" title="3.如何通过键获取对应的值"></a>3.如何通过键获取对应的值</h3><p>例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict=&#123;&#x27;name&#x27;:&#x27;147&#x27;&#125;</span><br><span class="line">print(dict[&#x27;name&#x27;])</span><br></pre></td></tr></table></figure><br>运行结果为打印出147</p><h3 id="4-keys（）"><a href="#4-keys（）" class="headerlink" title="4.keys（）"></a>4.keys（）</h3><p>获取所有的键，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict=&#123;&#x27;name&#x27;:&#x27;147&#x27;,&#x27;age&#x27;:7&#125;</span><br><span class="line">print(dict.keys())</span><br></pre></td></tr></table></figure><br>运行结果为打印出dict.keys([‘name’,’age’])</p><h3 id="5-values"><a href="#5-values" class="headerlink" title="5.values()"></a>5.values()</h3><p>获取所有的值，使用方法与keys（）相同</p><h3 id="6-items"><a href="#6-items" class="headerlink" title="6.items()"></a>6.items()</h3><p>获取所有的键和值（以列表形式），使用方法与keys（）相同</p><h3 id="7-updat（）"><a href="#7-updat（）" class="headerlink" title="7.updat（）"></a>7.updat（）</h3><p>添加或更新键值对，使用方法：字典名.updat({‘height’:’180’})</p><h3 id="8-del"><a href="#8-del" class="headerlink" title="8.del"></a>8.del</h3><p>删除字典中的键值对，使用方法：<br>del 字典名[‘键’]</p><h3 id="9-pop（）"><a href="#9-pop（）" class="headerlink" title="9.pop（）"></a>9.pop（）</h3><p>取出某一键值对，取出的键值对可另外使用</p>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记2-元组</title>
    <link href="https://147wind.github.io/2021/01/31/python%E7%AC%94%E8%AE%B02-%E5%85%83%E7%BB%84/"/>
    <id>https://147wind.github.io/2021/01/31/python%E7%AC%94%E8%AE%B02-%E5%85%83%E7%BB%84/</id>
    <published>2021-01-30T16:00:00.000Z</published>
    <updated>2022-05-11T11:47:02.801Z</updated>
    
    <content type="html"><![CDATA[<p><strong>元组</strong>（tuple）和列表很像，不同之处在于元组的数据项<strong>无法修改</strong>。元组使用<strong>小括号</strong>，元组也是通过下标进行访问</p><p>特点：</p><p>1.不可变</p><p>2.用（）创建元组类型，数据项用逗号隔开</p><p>3.数据项可以是<strong>任何类型</strong></p><p>4.当元组中只有一个元素时，要加上逗号，不然后解释器会当做整型（int）来处理</p><p>5.支持切片操作</p><h3 id="1-count"><a href="#1-count" class="headerlink" title="1.count()"></a>1.count()</h3><p>用来计算元组中某一数据项出现出次数，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tuple=(1,2,3,4,5,5,6,6,6)</span><br><span class="line">print(tuple.count(6))</span><br></pre></td></tr></table></figure><br>运行结果为打印出3</p>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记1-字符串</title>
    <link href="https://147wind.github.io/2021/01/29/python%E7%AC%94%E8%AE%B01-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://147wind.github.io/2021/01/29/python%E7%AC%94%E8%AE%B01-%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2021-01-28T16:00:00.000Z</published>
    <updated>2022-05-11T11:44:15.707Z</updated>
    
    <content type="html"><![CDATA[<p>在Python中，存在三种内置的序列类型：<br>字符串、列表和元组</p><p>序列的优点：可以支持<strong>索引和切片</strong>操作</p><p>特征：第一个正索引为0，指向的是左端【—-》】，第一个正索引为负数时，指向的是右端【《—-】</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>1.可通过字符串+[索引]来获取字符串中的字符，例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test=&#x27;python&#x27; #类型为字符串</span><br><span class="line">print(&quot;获取第一个字符%s&quot;%test[0]) #0是字符串中的第一个字符</span><br></pre></td></tr></table></figure><p>运行结果为打印出一个“p”</p><p><em>补充：print中添加end’+空格’的作用是取消换行操作<br>之添加’+空格’的作用是换行</em></p><p>除此之外,[]还可以获取范围内的字符，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srtMsg=&quot;hello world&quot;</span><br><span class="line">print(strMsg[2:5])</span><br></pre></td></tr></table></figure><br>运行结果是打印出llo<br>如果是[2:]则是打印出第三个后面的字符，即llo world<br>如果想要倒序则改成[::-1]，即打印出dlrow olleh</p><p>2.可以通过capitalize()将字符串首字母转换为大写，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name=&#x27;peter&#x27;</span><br><span class="line">print(&#x27;首字母转换大写%s&#x27;%name.capitalize())</span><br></pre></td></tr></table></figure><br>运行结果为打印出“首字母转换大写Peter”</p><p>lower()可以用来将字符串中的所有内容都转换成小写<br>upper()则相反</p><p>3.可通过strip()来去除字符串中的空格，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=&quot;   hello   &quot;</span><br><span class="line">b=a.strip()</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><br>运行结果为打印出hello而没有空格<br>此为，lstrip()和rstrip()分别可以去除左边和右边的空格</p><p>4.可以用id()来查询变量的内存地址，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=1</span><br><span class="line">print(&#x27;a的内存地址为%d&#x27;%id(a))</span><br></pre></td></tr></table></figure></p><p>5.可以用find()来查找目标在序列中的位置，例：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">datasrt=&#x27;i love python&#x27;</span><br><span class="line">print(datasrt.find(&#x27;p&#x27;))</span><br></pre></td></tr></table></figure><br>运行结果为打印出7<br>如果find()没有找到对象，则会返回-1</p><p>index()可以查找字符串中的子字符串，如果没有找到则会报错而不会返回值</p><p>6.startswith()和endswith()分别用来判断是否以什么值为开始或以什么值为结束，返回的是True或False</p>]]></content>
    
    
    <summary type="html">印象笔记备份</summary>
    
    
    
    <category term="python" scheme="https://147wind.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://147wind.github.io/tags/python/"/>
    
  </entry>
  
</feed>
